//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherFirstTouch;

    public static Entitas.IMatcher<InputEntity> FirstTouch {
        get {
            if (_matcherFirstTouch == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.FirstTouch);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherFirstTouch = matcher;
            }

            return _matcherFirstTouch;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public Code.Gameplay.Input.FirstTouch firstTouch { get { return (Code.Gameplay.Input.FirstTouch)GetComponent(InputComponentsLookup.FirstTouch); } }
    public UnityEngine.Vector2 FirstTouch { get { return firstTouch.Value; } }
    public bool hasFirstTouch { get { return HasComponent(InputComponentsLookup.FirstTouch); } }

    public InputEntity AddFirstTouch(UnityEngine.Vector2 newValue) {
        var index = InputComponentsLookup.FirstTouch;
        var component = (Code.Gameplay.Input.FirstTouch)CreateComponent(index, typeof(Code.Gameplay.Input.FirstTouch));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public InputEntity ReplaceFirstTouch(UnityEngine.Vector2 newValue) {
        var index = InputComponentsLookup.FirstTouch;
        var component = (Code.Gameplay.Input.FirstTouch)CreateComponent(index, typeof(Code.Gameplay.Input.FirstTouch));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public InputEntity RemoveFirstTouch() {
        RemoveComponent(InputComponentsLookup.FirstTouch);
        return this;
    }
}
