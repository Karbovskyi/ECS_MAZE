//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTouchCurrentCell;

    public static Entitas.IMatcher<GameEntity> TouchCurrentCell {
        get {
            if (_matcherTouchCurrentCell == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TouchCurrentCell);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTouchCurrentCell = matcher;
            }

            return _matcherTouchCurrentCell;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.AAAGame.Map.TouchCurrentCell touchCurrentCell { get { return (Code.AAAGame.Map.TouchCurrentCell)GetComponent(GameComponentsLookup.TouchCurrentCell); } }
    public UnityEngine.Vector2Int TouchCurrentCell { get { return touchCurrentCell.Value; } }
    public bool hasTouchCurrentCell { get { return HasComponent(GameComponentsLookup.TouchCurrentCell); } }

    public GameEntity AddTouchCurrentCell(UnityEngine.Vector2Int newValue) {
        var index = GameComponentsLookup.TouchCurrentCell;
        var component = (Code.AAAGame.Map.TouchCurrentCell)CreateComponent(index, typeof(Code.AAAGame.Map.TouchCurrentCell));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceTouchCurrentCell(UnityEngine.Vector2Int newValue) {
        var index = GameComponentsLookup.TouchCurrentCell;
        var component = (Code.AAAGame.Map.TouchCurrentCell)CreateComponent(index, typeof(Code.AAAGame.Map.TouchCurrentCell));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveTouchCurrentCell() {
        RemoveComponent(GameComponentsLookup.TouchCurrentCell);
        return this;
    }
}
